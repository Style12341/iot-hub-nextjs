name: Deploy Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Autenticarse en Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configurar Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Autenticar Docker con Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Construir y enviar imagen a Artifact Registry
        run: |
          docker build \
          --build-arg NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }} \
          -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/iothubnextjs/mi-app .
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/iothubnextjs/mi-app


      - name: Desplegar en Cloud Run
        run: |
          gcloud run deploy mi-app \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/iothubnextjs/mi-app \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --vpc-connector iothubnextjs-vpcconnector \
            --service-account github-actions@${{ secrets.GCP_PROJECT }}.iam.gserviceaccount.com \
            --set-env-vars "NODE_ENV=production" \
            --set-env-vars "CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}" \
            --set-env-vars "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}" \
            --set-env-vars "REDIS_URL=${{ secrets.REDIS_URL }}" \
            --set-env-vars "SIGNING_SECRET=${{ secrets.SIGNING_SECRET }}" \
            --set-env-vars "DATABASE_URL=${{ secrets.DATABASE_URL }}"

      #- name: Ejecutar Migraciones en Cloud SQL
      #  run: |
      #    gcloud run exec mi-app --region=us-central1 -- npx prisma migrate deploy
      #  env:
      #   DATABASE_URL: ${{ secrets.DATABASE_URL }}
